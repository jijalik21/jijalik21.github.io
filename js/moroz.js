$(document).ready(function(){function n(n){return Array.prototype.slice.call(n)}function e(e){return e.map(function(e){return n(e)})}function t(n,t){for(var r=0;r<n.length;r++)s.push(e(n)[r].map(function(n){return"INPUT"===n.tagName&&n}).filter(Boolean).map(function(n){return"true"===n.value?1:0})),m.push(e(n)[r].map(function(n){return"INPUT"===n.tagName&&n}).filter(Boolean).map(function(n){return n.checked?1:0}));c.push(a.map(function(n){return n.value}))}function r(){var n=u(s),e=u(m);f=[];for(var t=0;t<a.length;t++)p[t]===c[0][t]?f.push(1):f.push(0);for(var r=0;r<l.length;r++){for(var o=0,i=0;i<=s[r].length-1;i++)s[r][i]===m[r][i]&&0!==s[r][i]&&(o+=1);o<=n[r]&&0!==o&&e[r]<=n[r]?f.push(o/n[r]):f.push(0)}}function u(n){return n.map(function(n){return n.reduce(function(n,e){return n+e})})}function o(n){return n=n.reduce(function(n,e){return n+e}).toString(),L=n.length,"1"===n[L-2]?" балів":"2"===n[L-1]||"3"===n[L-1]||"4"===n[L-1]?" бала":"1"===n[L-1]?" бал":" балів"}$("#submit").on("click",function(){document.location.href="../inner_pages/marks.html"});var i=window.location.href.split("/");if(i=i.slice(i.length-2,i.length).join("/"),"inner_pages/practice.html"===i){console.log("asdad");var a=[],c=[],l=[],s=[],m=[],f=[],p=["ахмад","альтиметр","авіатор","гугл","хобі","хаскі","інтернет","менеджмент","маніпуляція","медіа плеєр","московський","орт","перфоратор","платформа","ресурс","спешіал сістем індастрі","тег","турбогенератор","відео","зара"],d=document.getElementById("submit");d.addEventListener("click",function(e){e.preventDefault(),s=[],m=[],a=document.getElementsByName("transliteration"),l=document.getElementsByClassName("question-wrap"),a=n(n(a)),l=n(n(l).map(function(n){return n.childNodes})),t(l,a),r(f),f=f.reduce(function(n,e){return n+e})+o(f)+" з 80",window.sessionStorage.setItem("myResult",f)},!1)}else if("inner_pages/marks.html"===i){var g=window.sessionStorage.getItem("myResult");document.getElementById("final-mark").innerText=g+""}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vcm96LmpzIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiaW50b0FycmF5Iiwibm9kZUxpc3QiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsIml0ZW1Ub0FycmF5Iiwibm9kZUxpc3QyIiwibWFwIiwieCIsInJlYWRpbmdGcm9tRm9ybXMiLCJsaXN0IiwiaW5wdXRMaXN0IiwiaSIsImxlbmd0aCIsImFycmF5VmFsdWVzIiwicHVzaCIsInRhZ05hbWUiLCJmaWx0ZXIiLCJCb29sZWFuIiwidmFsdWUiLCJjaGVja2VkVmFsdWVzIiwiY2hlY2tlZCIsInRybGl0QXJyYXlWYWx1ZXMiLCJ0cmxpdEFycmF5IiwiY2FsY3VsYXRlUmVzdWx0IiwiYW1vdW50T2ZSaWdodEFuc3dlcnMiLCJjaGVhdGVyRGV0ZWN0aW9uIiwiYW1vdW50T2ZBbnN3ZXJzIiwibWFyayIsIml0ZXIiLCJfUmlnaHRJbnB1dHMiLCJ0ZXN0QXJyYXkiLCJjb3VudGVyIiwiaiIsInNvbWVBcnJheSIsInJlZHVjZSIsImFjYyIsInZhbCIsImVuZGluZyIsInAxIiwicDIiLCJ0b1N0cmluZyIsIkwiLCJvbiIsImxvY2F0aW9uIiwiaHJlZiIsIndpbmRvdyIsInNwbGl0Iiwiam9pbiIsImNvbnNvbGUiLCJsb2ciLCJsb29rIiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImNoaWxkTm9kZXMiLCJzZXNzaW9uU3RvcmFnZSIsInNldEl0ZW0iLCJtYXJrU3RvcmFnZSIsImdldEl0ZW0iLCJpbm5lclRleHQiXSwibWFwcGluZ3MiOiJBQUFBQSxFQUFFQyxVQUFVQyxNQUFNLFdBb0VkLFFBQVNDLEdBQVVDLEdBQ2YsTUFBT0MsT0FBTUMsVUFBVUMsTUFBTUMsS0FBS0osR0FHdEMsUUFBU0ssR0FBWUMsR0FDakIsTUFBT0EsR0FBVUMsSUFBSSxTQUFVQyxHQUMzQixNQUFPVCxHQUFVUyxLQUl6QixRQUFTQyxHQUFpQkMsRUFBTUMsR0FDNUIsSUFBSyxHQUFJQyxHQUFJLEVBQUdBLEVBQUlGLEVBQUtHLE9BQVFELElBRTdCRSxFQUFZQyxLQUFLVixFQUFZSyxHQUFNRSxHQUFHTCxJQUFJLFNBQVVDLEdBQ2hELE1BQXFCLFVBQWRBLEVBQUVRLFNBQXNCUixJQUNoQ1MsT0FBT0MsU0FBU1gsSUFBSSxTQUFVQyxHQUM3QixNQUFtQixTQUFaQSxFQUFFVyxNQUFtQixFQUFJLEtBRXBDQyxFQUFjTCxLQUFLVixFQUFZSyxHQUFNRSxHQUNoQ0wsSUFBSSxTQUFVQyxHQUNYLE1BQXFCLFVBQWRBLEVBQUVRLFNBQXNCUixJQUVsQ1MsT0FBT0MsU0FDUFgsSUFBSSxTQUFVQyxHQUNYLE1BQU9BLEdBQUVhLFFBQVUsRUFBSSxJQU1uQ0MsR0FBaUJQLEtBQUtRLEVBQVdoQixJQUFJLFNBQVVDLEdBQ3ZDLE1BQU9BLEdBQUVXLFNBT3JCLFFBQVNLLEtBQ0wsR0FBSUMsR0FBdUJDLEVBQWlCWixHQUN4Q2EsRUFBa0JELEVBQWlCTixFQUN2Q1EsS0FFQSxLQUFLLEdBQUlDLEdBQU8sRUFBR0EsRUFBT04sRUFBV1YsT0FBUWdCLElBQ3pDQyxFQUFhRCxLQUFRUCxFQUFpQixHQUFHTyxHQUFTRCxFQUFLYixLQUFLLEdBQUthLEVBQUtiLEtBQUssRUFHL0UsS0FBSyxHQUFJSCxHQUFJLEVBQUdBLEVBQUltQixFQUFVbEIsT0FBUUQsSUFBSyxDQUV2QyxJQUFLLEdBRERvQixHQUFVLEVBQ0xDLEVBQUksRUFBR0EsR0FBS25CLEVBQVlGLEdBQUdDLE9BQVMsRUFBR29CLElBQ3hDbkIsRUFBWUYsR0FBR3FCLEtBQU9iLEVBQWNSLEdBQUdxQixJQUE0QixJQUF0Qm5CLEVBQVlGLEdBQUdxQixLQUM1REQsR0FBb0IsRUFJeEJBLElBQVdQLEVBQXFCYixJQUFrQixJQUFab0IsR0FBaUJMLEVBQWdCZixJQUFNYSxFQUFxQmIsR0FDbEdnQixFQUFLYixLQUFLaUIsRUFBVVAsRUFBcUJiLElBRXhDZ0IsRUFBS2IsS0FBSyxJQU12QixRQUFTVyxHQUFpQlEsR0FDdEIsTUFBT0EsR0FDRjNCLElBQUksU0FBVUMsR0FDWCxNQUFPQSxHQUFFMkIsT0FBTyxTQUFVQyxFQUFLQyxHQUMzQixNQUFPRCxHQUFNQyxNQUs3QixRQUFTQyxHQUFPbkIsR0FJWixNQUhBQSxHQUFRQSxFQUFNZ0IsT0FBTyxTQUFVSSxFQUFJQyxHQUFLLE1BQU9ELEdBQUdDLElBQU1DLFdBQ3hEQyxFQUFLdkIsRUFBTU4sT0FFTSxNQUFkTSxFQUFNdUIsRUFBRSxHQUFrQixTQUNQLE1BQWR2QixFQUFNdUIsRUFBRSxJQUEyQixNQUFkdkIsRUFBTXVCLEVBQUUsSUFBMkIsTUFBZHZCLEVBQU11QixFQUFFLEdBQWtCLFFBQ3RELE1BQWR2QixFQUFNdUIsRUFBRSxHQUFrQixPQUN0QixTQW5KaEI5QyxFQUFFLFdBQVcrQyxHQUFHLFFBQVMsV0FDckI5QyxTQUFTK0MsU0FBU0MsS0FBTyw2QkFHN0IsSUFBSUQsR0FBV0UsT0FBT0YsU0FBU0MsS0FBS0UsTUFBTSxJQUcxQyxJQUZBSCxFQUFXQSxFQUFTekMsTUFBTXlDLEVBQVMvQixPQUFPLEVBQUcrQixFQUFTL0IsUUFBU21DLEtBQUssS0FFbkQsOEJBQWJKLEVBQTBDLENBQzFDSyxRQUFRQyxJQUFJLFFBQ1osSUFBSTNCLE1BQ0FELEtBRUFTLEtBQ0FqQixLQUNBTSxLQUVBUSxLQUVBRSxHQUFnQixRQUFTLFlBQWEsVUFDdEMsT0FBUSxPQUFRLFFBQVMsV0FBWSxhQUFjLGNBQWUsY0FBZSxjQUFlLE1BQ2hHLGFBQWMsWUFBYSxTQUFVLDBCQUEyQixNQUFPLGlCQUFrQixRQUFTLFFBRWxHcUIsRUFBT3RELFNBQVN1RCxlQUFlLFNBSW5DRCxHQUFLRSxpQkFBaUIsUUFBUyxTQUFVQyxHQUNyQ0EsRUFBTUMsaUJBRU56QyxLQUNBTSxLQUNBRyxFQUFhMUIsU0FBUzJELGtCQUFrQixtQkFFeEN6QixFQUFZbEMsU0FBUzRELHVCQUF1QixpQkFNNUNsQyxFQUFheEIsRUFBVUEsRUFBVXdCLElBR2pDUSxFQUFZaEMsRUFBVUEsRUFBVWdDLEdBQzNCeEIsSUFBSSxTQUFVQyxHQUNYLE1BQU9BLEdBQUVrRCxjQUlqQmpELEVBQWlCc0IsRUFBV1IsR0FFNUJDLEVBQWdCSSxHQUVoQkEsRUFBT0EsRUFBS08sT0FBTyxTQUFVSSxFQUFJQyxHQUN6QixNQUFPRCxHQUFLQyxJQUNYRixFQUFPVixHQUFRLFFBQ3hCa0IsT0FBT2EsZUFBZUMsUUFBUSxXQUFZaEMsS0FDM0MsT0FLRixJQUFpQiwyQkFBYmdCLEVBQXVDLENBQzVDLEdBQUlpQixHQUFjZixPQUFPYSxlQUFlRyxRQUFRLFdBQ2hEakUsVUFBU3VELGVBQWUsY0FBY1csVUFBWUYsRUFBYyIsImZpbGUiOiJtb3Jvei5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAkKFwiI3N1Ym1pdFwiKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSAnLi4vaW5uZXJfcGFnZXMvbWFya3MuaHRtbCc7XG4gICAgfSk7XG4gICAgXG4gICAgdmFyIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoJy8nKTtcbiAgICBsb2NhdGlvbiA9IGxvY2F0aW9uLnNsaWNlKGxvY2F0aW9uLmxlbmd0aC0yLCBsb2NhdGlvbi5sZW5ndGggKS5qb2luKCcvJyk7XG5cbiAgICBpZiAobG9jYXRpb24gPT09ICdpbm5lcl9wYWdlcy9wcmFjdGljZS5odG1sJykge1xuICAgICAgICBjb25zb2xlLmxvZygnYXNkYWQnKTtcbiAgICAgICAgdmFyIHRybGl0QXJyYXkgPSBbXTtcbiAgICAgICAgdmFyIHRybGl0QXJyYXlWYWx1ZXMgPSBbXTtcblxuICAgICAgICB2YXIgdGVzdEFycmF5ID0gW107XG4gICAgICAgIHZhciBhcnJheVZhbHVlcyA9IFtdO1xuICAgICAgICB2YXIgY2hlY2tlZFZhbHVlcyA9IFtdO1xuXG4gICAgICAgIHZhciBtYXJrID0gW107XG5cbiAgICAgICAgdmFyIF9SaWdodElucHV0cyA9IFsn0LDRhdC80LDQtCcsICfQsNC70YzRgtC40LzQtdGC0YAnLCAn0LDQstGW0LDRgtC+0YAnLFxuICAgICAgICAgICAgJ9Cz0YPQs9C7JywgJ9GF0L7QsdGWJywgJ9GF0LDRgdC60ZYnLCAn0ZbQvdGC0LXRgNC90LXRgicsICfQvNC10L3QtdC00LbQvNC10L3RgicsICfQvNCw0L3RltC/0YPQu9GP0YbRltGPJywgJ9C80LXQtNGW0LAg0L/Qu9C10ZTRgCcsICfQvNC+0YHQutC+0LLRgdGM0LrQuNC5JywgJ9C+0YDRgicsXG4gICAgICAgICAgICAn0L/QtdGA0YTQvtGA0LDRgtC+0YAnLCAn0L/Qu9Cw0YLRhNC+0YDQvNCwJywgJ9GA0LXRgdGD0YDRgScsICfRgdC/0LXRiNGW0LDQuyDRgdGW0YHRgtC10Lwg0ZbQvdC00LDRgdGC0YDRlicsICfRgtC10LMnLCAn0YLRg9GA0LHQvtCz0LXQvdC10YDQsNGC0L7RgCcsICfQstGW0LTQtdC+JywgJ9C30LDRgNCwJ107XG5cbiAgICAgICAgdmFyIGxvb2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0Jyk7XG5cbiAgICAgICAgLy8g0KHRh9C40YLRi9Cy0LDRjiDQvtGC0LLQtdGC0Ysg0Lgg0YHRgNCw0LLQvdC40LLQsNGOINGBINC/0YDQsNCy0LjQu9GM0L3Ri9C80Lgg0L/QviDQvdCw0LbQsNGC0LjRjiDQutC90L7Qv9C60LhcblxuICAgICAgICBsb29rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICBhcnJheVZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgY2hlY2tlZFZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgdHJsaXRBcnJheSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCd0cmFuc2xpdGVyYXRpb24nKTtcblxuICAgICAgICAgICAgdGVzdEFycmF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInF1ZXN0aW9uLXdyYXBcIik7XG5cblxuICAgICAgICAgICAgLy8g0L/RgNC10LLRgNCw0YnQsNGOIEhUTUwt0LrQvtC70LvQtdC60YbQuNGOINCyINC80LDRgdGB0LzQsixcbiAgICAgICAgICAgIC8vINC/0L7Qu9GD0YfQsNGOINC80LDRgdGB0LjQsiBIVE1MLdC60L7Qu9C70LXQutGG0LjQuSDQuCDRg9C20LUg0LjRhSDQv9GA0LXQstGA0LDRidCw0Y4g0LIg0LzQsNGB0YHQuNCy0YtcbiAgICAgICAgICAgIC8vINC/0L7Qu9GD0YfQsNGOINC80LDRgdGB0LjQsiDQvNCw0YHRgdC40LLQvtCyXG4gICAgICAgICAgICB0cmxpdEFycmF5ID0gaW50b0FycmF5KGludG9BcnJheSh0cmxpdEFycmF5KSk7XG5cblxuICAgICAgICAgICAgdGVzdEFycmF5ID0gaW50b0FycmF5KGludG9BcnJheSh0ZXN0QXJyYXkpXG4gICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geC5jaGlsZE5vZGVzXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHJlYWRpbmdGcm9tRm9ybXModGVzdEFycmF5LCB0cmxpdEFycmF5KTsgLy8g0YHRh9C40YLRi9Cy0LDRjiDQv9GA0LDQstC40LvRjNC90YvQtSDQvtGC0LLQtdGC0Ysg0L/QviDRg9GB0LvQvtCy0LjRjiDQuCDQvtGC0LzQtdGH0LXQvdC90YvQtSDRjtC30LXRgNC+0LxcblxuICAgICAgICAgICAgY2FsY3VsYXRlUmVzdWx0KG1hcmspOyAvLyDRgdGA0LDQstC90LjQstCw0Y4g0L/RgNCw0LLQuNC70YzQvdGL0LUg0L7RgtCy0LXRgtGLINGBINGC0LXQvCwg0YfRgtC+INC+0YLQvNC10YLQuNC70LgsINC4INGB0YfQuNGC0LDRjiDRhNC40L3QsNC70YzQvdGL0Lkg0LHQsNC70LtcblxuICAgICAgICAgICAgbWFyayA9IG1hcmsucmVkdWNlKGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHAxICsgcDJcbiAgICAgICAgICAgICAgICB9KSArIGVuZGluZyhtYXJrKSArICcg0LcgODAnO1xuICAgICAgICAgICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ215UmVzdWx0JywgbWFyayk7XG4gICAgICAgIH0sIGZhbHNlKTtcblxuXG4gICAgfVxuXG4gICAgZWxzZSBpZiAobG9jYXRpb24gPT09ICdpbm5lcl9wYWdlcy9tYXJrcy5odG1sJykge1xuICAgICAgICB2YXIgbWFya1N0b3JhZ2UgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnbXlSZXN1bHQnKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZpbmFsLW1hcmsnKS5pbm5lclRleHQgPSBtYXJrU3RvcmFnZSArICcnO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gaW50b0FycmF5KG5vZGVMaXN0KSB7XG4gICAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChub2RlTGlzdClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpdGVtVG9BcnJheShub2RlTGlzdDIpIHtcbiAgICAgICAgcmV0dXJuIG5vZGVMaXN0Mi5tYXAoZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnRvQXJyYXkoeClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWFkaW5nRnJvbUZvcm1zKGxpc3QsIGlucHV0TGlzdCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblxuICAgICAgICAgICAgYXJyYXlWYWx1ZXMucHVzaChpdGVtVG9BcnJheShsaXN0KVtpXS5tYXAoZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geC50YWdOYW1lID09PSAnSU5QVVQnID8geCA6IGZhbHNlXG4gICAgICAgICAgICB9KS5maWx0ZXIoQm9vbGVhbikubWFwKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHgudmFsdWUgPT09ICd0cnVlJyA/IDEgOiAwXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBjaGVja2VkVmFsdWVzLnB1c2goaXRlbVRvQXJyYXkobGlzdClbaV1cbiAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB4LnRhZ05hbWUgPT09ICdJTlBVVCcgPyB4IDogZmFsc2VcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB4LmNoZWNrZWQgPyAxIDogMFxuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGV4dCBJbnB1dCBzZWN0aW9uXG4gICAgICAgIHRybGl0QXJyYXlWYWx1ZXMucHVzaCh0cmxpdEFycmF5Lm1hcChmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB4LnZhbHVlO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgKVxuXG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVSZXN1bHQoKSB7XG4gICAgICAgIHZhciBhbW91bnRPZlJpZ2h0QW5zd2VycyA9IGNoZWF0ZXJEZXRlY3Rpb24oYXJyYXlWYWx1ZXMpOyAvLyDQvNCw0YHRgdC40LIg0LjQtyDQutC+0LvQuNGH0LXRgdGC0LIg0L/RgNCw0LLQuNC70YzQvdGL0YUg0L7RgtCy0LXRgtC+0LIg0LIg0LLQvtC/0YDQvtGB0LVcbiAgICAgICAgdmFyIGFtb3VudE9mQW5zd2VycyA9IGNoZWF0ZXJEZXRlY3Rpb24oY2hlY2tlZFZhbHVlcyk7IC8vINC80LDRgdGB0LjQsiDQuNC3INC60L7Qu9C40YfQtdGB0YLQsiDQstGL0LHRgNCw0L3QvdGL0YUg0L7RgtCy0LXRgtC+0LIg0LIg0LLQvtC/0YDQvtGB0LVcbiAgICAgICAgbWFyayA9IFtdOyAvLyDQvNCw0YHRgdC40LIg0LLQtdGA0L3Ri9GFINC+0YLQstC10YLQvtCyINC30LAg0LrQsNC20LTRi9C5INCy0L7Qv9GA0L7RgVxuICAgICAgICAvLyBUZXh0IElucHV0IHNlY3Rpb25cbiAgICAgICAgZm9yICh2YXIgaXRlciA9IDA7IGl0ZXIgPCB0cmxpdEFycmF5Lmxlbmd0aDsgaXRlcisrKSB7XG4gICAgICAgICAgICBfUmlnaHRJbnB1dHNbaXRlcl09PT10cmxpdEFycmF5VmFsdWVzWzBdW2l0ZXJdID8gIG1hcmsucHVzaCgxKSA6IG1hcmsucHVzaCgwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVzdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY291bnRlciA9IDA7IC8vINC/0YDQsNCy0LjQu9GM0L3Ri9GFINC+0YLQstC10YLQvtCyXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8PSBhcnJheVZhbHVlc1tpXS5sZW5ndGggLSAxOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoYXJyYXlWYWx1ZXNbaV1bal0gPT09IGNoZWNrZWRWYWx1ZXNbaV1bal0gJiYgYXJyYXlWYWx1ZXNbaV1bal0gIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY291bnRlciA9IGNvdW50ZXIgKyAxO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvdW50ZXIgPD0gYW1vdW50T2ZSaWdodEFuc3dlcnNbaV0gJiYgY291bnRlciAhPT0gMCAmJiBhbW91bnRPZkFuc3dlcnNbaV0gPD0gYW1vdW50T2ZSaWdodEFuc3dlcnNbaV0pIHtcbiAgICAgICAgICAgICAgICBtYXJrLnB1c2goY291bnRlciAvIGFtb3VudE9mUmlnaHRBbnN3ZXJzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgbWFyay5wdXNoKDApO1xuICAgICAgICB9XG5cblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNoZWF0ZXJEZXRlY3Rpb24oc29tZUFycmF5KSB7XG4gICAgICAgIHJldHVybiBzb21lQXJyYXlcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geC5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2MgKyB2YWw7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVuZGluZyh2YWx1ZSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlZHVjZShmdW5jdGlvbiAocDEsIHAyKSB7cmV0dXJuIHAxK3AyIH0pLnRvU3RyaW5nKCk7XG4gICAgICAgIEwgPSAgdmFsdWUubGVuZ3RoO1xuXG4gICAgICAgIGlmKHZhbHVlW0wtMl09PT0gJzEnKSByZXR1cm4gJyDQsdCw0LvRltCyJztcbiAgICAgICAgZWxzZSBpZih2YWx1ZVtMLTFdPT09ICcyJyB8fCB2YWx1ZVtMLTFdPT09ICczJyB8fCB2YWx1ZVtMLTFdPT09ICc0JykgcmV0dXJuICcg0LHQsNC70LAnO1xuICAgICAgICBlbHNlIGlmKHZhbHVlW0wtMV09PT0gJzEnKSByZXR1cm4gJyDQsdCw0LsnO1xuICAgICAgICBlbHNlIHJldHVybiAnINCx0LDQu9GW0LInO1xuICAgIH1cbn0pOyJdfQ==
